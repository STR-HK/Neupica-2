{"version":3,"file":"Children.js","sourceRoot":"","sources":["Children.ts"],"names":[],"mappings":"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","sourcesContent":["import { NObject } from \"./NObject.js\"\r\nimport { Native } from \"../Neupica/Components/Native/Native\"\r\n\r\nexport class Children extends NObject {\r\n    parent: any\r\n    children: any[]\r\n    appendTo = (where: HTMLElement): void => {\r\n        // console.log(this.cvt(this.children))\r\n        this.cvt(this.children).forEach((element) => {\r\n            // console.log(element)\r\n            where.appendChild(element)\r\n        })\r\n    }\r\n    constructor() {\r\n        super()\r\n\r\n        this.children = []\r\n    }\r\n\r\n    get scout() {\r\n        return this.children[0]\r\n    }\r\n\r\n    suicide() {\r\n        if (this.parent) {\r\n            this.parent.removeChild(this)\r\n        }\r\n    }\r\n\r\n    apoptosis() {\r\n        this.suicide()\r\n        Object.keys(this).forEach(key => {\r\n            delete this[key];\r\n        });\r\n        console.log(this)\r\n    }\r\n\r\n    addChild(child) {\r\n        try {\r\n            child.parent = this\r\n        } catch (e) {\r\n            console.warn('addChild: found orphan')\r\n        }\r\n        this.children.push(child)\r\n        this.childrenUpdate({\r\n            type: 'add',\r\n            target: child\r\n        })\r\n        this.childrenUpdated({\r\n            type: 'add',\r\n            target: child\r\n        })\r\n        return this\r\n\r\n    }\r\n\r\n    removeChild(child) {\r\n        try {\r\n            child.parent = undefined\r\n        } catch (e) {\r\n            console.warn('removeChild: made orphan')\r\n        }\r\n        let index = this.children.indexOf(child)\r\n        if (index !== -1) {\r\n            this.children.splice(index, 1)\r\n        }\r\n        this.childrenUpdate({\r\n            type: 'remove',\r\n            target: child\r\n        })\r\n        this.childrenUpdated({\r\n            type: 'remove',\r\n            target: child\r\n        })\r\n    }\r\n\r\n    removeChildren() {\r\n        this.children.forEach(function(child ) {\r\n            this.removeChild(child)\r\n        }.bind(this))\r\n        this.children = []\r\n    }\r\n\r\n    addChildren(children: Array<any>) {\r\n        children.forEach(e => {\r\n            this.addChild(e)\r\n        })\r\n        return this\r\n    }\r\n    clearChildren() {\r\n        // this.children = []\r\n        this.children.forEach(e => {\r\n            this.children.splice(this.children.indexOf(e), 1)\r\n        })\r\n        this.childrenUpdate({\r\n            type: 'clear'\r\n        })\r\n        this.childrenUpdated({\r\n            type: 'clear'\r\n        })\r\n    }\r\n\r\n    setChild(index, child) {\r\n        if (this.children[index]) {\r\n            if (this.children[index]['parent']) {\r\n                this.children[index].parent = undefined\r\n            }\r\n        }\r\n        this.children[index] = child\r\n        child.parent = this\r\n        this.childrenUpdate({\r\n            type: 'set',\r\n            target: child\r\n        })\r\n        this.childrenUpdated({\r\n            type: 'set',\r\n            target: child\r\n        })\r\n    }\r\n\r\n    cvt(children) {\r\n        let element = []\r\n        // console.log(children)\r\n        children.forEach((child) => {\r\n            if (child.hasOwnProperty(\"cover\")) {\r\n                element.push(child.cover)\r\n            } else {\r\n                element.push(child.element)\r\n            }\r\n        })\r\n        // console.log(element)\r\n        return element\r\n    }\r\n\r\n    childrenUpdated(...args) {\r\n\r\n    }\r\n\r\n    childrenUpdate(...args) {\r\n\r\n    }\r\n}\r\n"]}