{"version":3,"file":"Updater.js","sourceRoot":"","sources":["Updater.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,IAAI,cAAc,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE;IACrD,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE;QACvB,MAAM,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,CAAK,OAAO;QACzC,yCAAyC;QACzC,+DAA+D;QAC/D,8DAA8D;KACjE;AACL,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,IAAI,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,OAAO,CAAC,EAAE;IACjE,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE;QACvB,0EAA0E;QAC1E,wEAAwE;QACxE,sEAAsE;QACtE,kEAAkE;QAClE,0DAA0D;QAC1D,kDAAkD;QAClD,8CAA8C;KAEjD;AACL,CAAC,CAAC,CAAA;AAEF,wCAAwC","sourcesContent":["export let resizeObserver = new ResizeObserver(entries => {\r\n    for (let entry of entries) {\r\n        const cr = entry.contentRect;     // this\r\n        // console.log('Element:', entry.target);\r\n        // console.log(`Element size: ${cr.width}px x ${cr.height}px`);\r\n        // console.log(`Element padding: ${cr.top}px ; ${cr.left}px`);\r\n    }\r\n})\r\n\r\nexport let intersectionObserver = new IntersectionObserver(entries => {\r\n    for (let entry of entries) {\r\n        // console.log(`Element boundingClientRect: ${entry.boundingClientRect}`);\r\n        // console.log(`Element intersectionRatio: ${entry.intersectionRatio}`);\r\n        // console.log(`Element intersectionRect: ${entry.intersectionRect}`);\r\n        // console.log(`Element isIntersecting: ${entry.isIntersecting}`);\r\n        // console.log(`Element rootBounds: ${entry.rootBounds}`);\r\n        // console.log(`Element target: ${entry.target}`);\r\n        // console.log(`Element time: ${entry.time}`);\r\n\r\n    }\r\n})\r\n\r\n// resizeObserver.observe(document.body)"]}