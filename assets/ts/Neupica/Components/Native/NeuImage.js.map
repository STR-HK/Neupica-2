{"version":3,"file":"NeuImage.js","sourceRoot":"","sources":["NeuImage.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAoB,MAAM,mBAAmB,CAAA;AAWlE,MAAM,OAAO,QAAS,SAAQ,YAAY;IAGtC;QACI,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,IAAI,GAAG,UAAU,CAAA;QAEtB,IAAI,CAAC,IAAI,GAAG;YACR,GAAG,IAAI,YAAY,EAAE,CAAC,IAAI;YAE1B,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,EAAE;SAChB,CAAA;QACD,IAAI,CAAC,KAAK,EAAE,CAAA;QAEZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAE9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA;QAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAEjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAA;QAE1B,4BAA4B;IAChC,CAAC;IAED,GAAG;QACC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA;QAChC,IAAI;YACA,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAA;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAA;YACvB,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;YACpC,GAAG,CAAC,YAAY,GAAG,aAAa,CAAA;YAChC,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBACd,IAAG;oBACC,IAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;oBAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;oBAChB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;iBACjB;gBAAC,OAAO,CAAC,EAAE;iBAEX;YACL,CAAC,CAAA;YACD,iBAAiB;SACpB;QAAC,OAAO,CAAC,EAAE;YACR,mBAAmB;SACtB;QACD,iCAAiC;QACjC,0BAA0B;QAC1B,0CAA0C;QAC1C,kCAAkC;QAClC,8BAA8B;QAC9B,qBAAqB;QACrB,gCAAgC;QAChC,2DAA2D;QAC3D,uCAAuC;QACvC,eAAe;QACf,uBAAuB;QACvB,uFAAuF;QACvF,YAAY;QACZ,QAAQ;QACR,IAAI;QACJ,kCAAkC;QAClC,2BAA2B;QAC3B,8BAA8B;QAC9B,IAAI;QACJ,gCAAgC;QAChC,yBAAyB;QACzB,8BAA8B;QAC9B,IAAI;QACJ,8BAA8B;QAC9B,2BAA2B;QAC3B,IAAI;QACJ,gCAAgC;QAChC,6BAA6B;QAC7B,IAAI;QACJ,8BAA8B;QAC9B,2BAA2B;QAC3B,IAAI;QACJ,yCAAyC;QACzC,iCAAiC;QACjC,kCAAkC;QAClC,kCAAkC;QAClC,wCAAwC;QACxC,kCAAkC;QAClC,kCAAkC;QAClC,wCAAwC;QACxC,4CAA4C;QAC5C,kCAAkC;QAClC,wCAAwC;QACxC,mCAAmC;QACnC,kCAAkC;QAClC,wCAAwC;QACxC,gCAAgC;QAChC,kCAAkC;QAClC,QAAQ;QACR,IAAI;QACJ,6BAA6B;QAC7B,2CAA2C;QAC3C,2CAA2C;QAC3C,IAAI;QACJ,uCAAuC;QACvC,aAAa;IACjB,CAAC;IAED,SAAS;QACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAA;IACtD,CAAC;CACJ","sourcesContent":["import { Native } from \"./Native.js\"\r\nimport { NeuContainer, NeuContainerData } from \"./NeuContainer.js\"\r\n\r\ninterface UImageElement extends HTMLImageElement {\r\n    addChild: (child) => void\r\n}\r\n\r\nexport interface NeuImageData extends NeuContainerData {\r\n    Src: string,\r\n    ObjectFit: string,\r\n}\r\n\r\nexport class NeuImage extends NeuContainer {\r\n    declare element: UImageElement\r\n    declare data: NeuImageData\r\n    constructor() {\r\n        super()\r\n        this.name = \"NeuImage\"\r\n\r\n        this.data = {\r\n            ...new NeuContainer().data,\r\n\r\n            Src: \"\",\r\n            ObjectFit: \"\",\r\n        }\r\n        this.build()\r\n\r\n        this.removeChild(this.element)\r\n\r\n        this.element = this.createImg()\r\n        this.cover.addChild(this.element)\r\n\r\n        this.target = this.element\r\n\r\n        // this.cover = this.element\r\n    }\r\n\r\n    Src() {\r\n        this.element.src = this.data.Src\r\n        try {\r\n            let xhr = new XMLHttpRequest()\r\n            let elem = this.element\r\n            xhr.open(\"GET\", this.data.Src, true)\r\n            xhr.responseType = \"arraybuffer\"\r\n            xhr.onload = () => {\r\n                try{\r\n                    let url = URL.createObjectURL(xhr.response)\r\n                    console.log(url)\r\n                    elem.src = url\r\n                } catch (e) {\r\n\r\n                }\r\n            }\r\n            // xhr.send(null)\r\n        } catch (e) {\r\n            // console.error(e)\r\n        }\r\n        // let xhr = new XMLHttpRequest()\r\n        // let elem = this.element\r\n        // // xmlhttp.responseType = \"arraybuffer\"\r\n        // xhr.onprogress = function (e) {\r\n        //     console.log(xhr.status)\r\n        //     console.log(e)\r\n        //     if (e.lengthComputable) {\r\n        //         let percentComplete = (e.loaded / e.total) * 100\r\n        //         console.log(percentComplete)\r\n        //     } else {\r\n        //         console.log(\r\n        //             \"Unable to compute progress information since the total size is unknown\"\r\n        //         )\r\n        //     }\r\n        // }\r\n        // xhr.onloadstart = function () {\r\n        //     console.log(\"start\")\r\n        //     console.log(xhr.status)\r\n        // }\r\n        // xhr.onloadend = function () {\r\n        //     console.log(\"end\")\r\n        //     console.log(xhr.status)\r\n        // }\r\n        // xhr.onabort = function () {\r\n        //     console.log(\"abort\")\r\n        // }\r\n        // xhr.ontimeout = function () {\r\n        //     console.log(\"timeout\")\r\n        // }\r\n        // xhr.onerror = function () {\r\n        //     console.log(\"error\")\r\n        // }\r\n        // xhr.onreadystatechange = function () {\r\n        //     if (xhr.readyState == 0) {\r\n        //         console.log('0 UNSENT')\r\n        //         console.log(xhr.status)\r\n        //     } else if (xhr.readyState == 1) {\r\n        //         console.log('1 OPENED')\r\n        //         console.log(xhr.status)\r\n        //     } else if (xhr.readyState == 2) {\r\n        //         console.log('2 HEADERS_RECEIVED')\r\n        //         console.log(xhr.status)\r\n        //     } else if (xhr.readyState == 3) {\r\n        //         console.log('3 LOADING')\r\n        //         console.log(xhr.status)\r\n        //     } else if (xhr.readyState == 4) {\r\n        //         console.log('4 DONE')\r\n        //         console.log(xhr.status)\r\n        //     }\r\n        // }\r\n        // xhr.onload = function () {\r\n        //     let blob = new Blob([this.response])\r\n        //     elem.src = URL.createObjectURL(blob)\r\n        // }\r\n        // xhr.open(\"GET\", this.data.Src, true)\r\n        // xhr.send()\r\n    }\r\n\r\n    ObjectFit() {\r\n        this.element.style.objectFit = this.data.ObjectFit\r\n    }\r\n}\r\n"]}