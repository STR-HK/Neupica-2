{"version":3,"file":"Native.js","sourceRoot":"","sources":["Native.ts"],"names":[],"mappings":"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","sourcesContent":["import { Found } from \"../Found/Found.js\"\r\nimport ripplet from \"../M3/Components/Ripplet.js\"\r\nimport { Modal_dep } from \"../../../Common/Modal.js\"\r\nimport { UDivElement } from \"../Create/Create.js\"\r\n\r\n\r\nexport class Native extends Found {\r\n    parentOfElement: HTMLElement\r\n    indexFromParent: number\r\n    anchorFromParent: Element\r\n    displayed: boolean\r\n    RippleNames: any[]\r\n    RippleFunctions: any[]\r\n    modal: UDivElement\r\n    constructor() {\r\n        super()\r\n\r\n        this.cover = this.createCover()\r\n        this.cover.style.webkitTapHighlightColor = \"transparent\"\r\n\r\n        // this.modal = this.createModal()\r\n        // this.modal.style.zIndex = '9999'\r\n        // this.modal.style.pointerEvents = 'none'\r\n        // this.modal.style.width = '100%'\r\n        // this.modal.style.height = '100%'\r\n        // this.modal.style.flexDirection = 'column'\r\n        // this.modal.style.position = 'absolute'\r\n        // this.modal.style.justifyContent = 'center'\r\n        // this.modal.style.alignItems = 'center'\r\n        // this.cover.addChild(this.modal)\r\n\r\n        // this.getBoundElement().addEventListener('resize', function() {\r\n        //     console.warn('res9ze')\r\n        // })\r\n\r\n        // console.log('you can use modal now!')\r\n\r\n        this.displayed = true\r\n\r\n    }\r\n\r\n    // addModal(element) {\r\n    //     this.addChild(element)\r\n    //     this.element.addChild(element)\r\n    // }\r\n    // removeModal(element) {\r\n    //\r\n    // }\r\n\r\n    Hide() {\r\n        if (this.displayed != false) {\r\n            this.displayed = false\r\n\r\n            // this.childrenUpdate()\r\n\r\n            // console.log('hide')\r\n\r\n            this.parentOfElement = this.cover.parentElement\r\n            this.indexFromParent = Array.from(this.parentOfElement.children).indexOf(this.cover)\r\n            this.anchorFromParent = this.parentOfElement.children[this.indexFromParent - 1]\r\n\r\n            this.parentOfElement.removeChild(this.cover)\r\n        } else {\r\n            // console.log('already hidden')\r\n        }\r\n    }\r\n\r\n    Show() {\r\n        if (this.displayed != true) {\r\n            this.displayed = true\r\n\r\n            // this.childrenUpdate()\r\n\r\n            if (this.anchorFromParent.nextSibling != undefined) {\r\n                this.parentOfElement.insertBefore(this.cover, this.anchorFromParent.nextSibling);\r\n            } else {\r\n                this.parentOfElement.appendChild(this.cover);\r\n            }\r\n        } else {\r\n            // console.log('already showed')\r\n        }\r\n    }\r\n\r\n    Interactive () {\r\n        this.cover.style.pointerEvents = 'auto'\r\n    }\r\n\r\n    DeInteractive() {\r\n        this.cover.style.pointerEvents = 'none'\r\n    }\r\n\r\n    ActivateRipple(...args) {\r\n        ripplet.defaultOptions.opacity = 0.15\r\n        ripplet.defaultOptions.spreadingTimingFunction = 'ease'\r\n        ripplet.defaultOptions.spreadingDuration = '0.2s'\r\n        ripplet.defaultOptions.spreadingDelay = '0s'\r\n        ripplet.defaultOptions.clearing = false\r\n        ripplet.defaultOptions.clearingDelay = ripplet.defaultOptions.spreadingDuration\r\n        ripplet.defaultOptions.clearingDuration = ripplet.defaultOptions.spreadingDuration\r\n        ripplet.defaultOptions.centered = false\r\n        ripplet.defaultOptions.appendTo = 'parent'\r\n        // ripplet.defaultOptions.spreadingDuration = '0s'\r\n\r\n\r\n        this.RippleNames = [\r\n            'pointerdown',\r\n            'pointerup',\r\n            'pointerleave'\r\n        ]\r\n\r\n        this.RippleFunctions = [\r\n            function(e) {\r\n                if (this.getBoundingParent().style.gap != '') {\r\n                    if (args[0] != undefined) {\r\n                        ripplet(e, {appendTo: 'target', ...args[0]})\r\n                    } else {\r\n                        ripplet(e, {appendTo: 'target' })\r\n                    }\r\n                } else {\r\n                    if (args[0] != undefined) {\r\n                        ripplet(e, {...args[0]})\r\n                    } else {\r\n                        ripplet(e, )\r\n                    }\r\n                }\r\n            }.bind(this),\r\n\r\n            function() {\r\n                ripplet.clear(this)\r\n            }.bind(this.element),\r\n\r\n            function() {\r\n                ripplet.clear(this)\r\n            }.bind(this.element)\r\n        ]\r\n\r\n        for (let i = 0; i < this.RippleNames.length; i++) {\r\n            this.element.addEventListener(this.RippleNames[i], this.RippleFunctions[i])\r\n        }\r\n    }\r\n\r\n    DeActivateRipple() {\r\n        for (let i = 0; i < this.RippleNames.length; i++) {\r\n            this.element.removeEventListener(this.RippleNames[i], this.RippleFunctions[i])\r\n        }\r\n    }\r\n}\r\n"]}