{"version":3,"file":"NeuInput.js","sourceRoot":"","sources":["NeuInput.ts"],"names":[],"mappings":"AACA,yCAAyC;AACzC,OAAO,EAAE,YAAY,EAAoB,MAAM,mBAAmB,CAAA;AAgBlE,MAAM,OAAO,QAAS,SAAQ,YAAY;IAItC;QACI,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,IAAI,GAAG,UAAU,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG;YACR,GAAG,IAAI,YAAY,EAAE,CAAC,IAAI;YAE1B,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,KAAK;YAEf,UAAU,EAAE,EAAE;YACd,GAAG,EAAE,EAAE;YAEP,cAAc;YAEd,mBAAmB;YACnB,eAAe;YACf,WAAW;YACX,YAAY;SAEf,CAAA;QACD,IAAI,CAAC,KAAK,EAAE,CAAA;QAEZ,aAAa;QAEb,wBAAwB;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAE9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;QACjC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,aAAa,CAAA;QAClD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAA;QAClC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;QACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAA;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAA;QAE/B,iBAAiB;QACjB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,MAAM,CAAA;QAC5C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QACpC,4BAA4B;QAE5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAA;QAE1B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACxC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAA;QACxC,CAAC,CAAC,CAAA;IACN,CAAC;IAED,KAAK;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAA;IACxC,CAAC;IACD,IAAI;QACA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAA;IAEtC,CAAC;IACD,WAAW;QACP,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAA;IACpD,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAA;IAC9C,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAA;IAC9C,CAAC;IAED,UAAU;QACN,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAA;IACxD,CAAC;IAED,GAAG;QACC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA;IACpC,CAAC;CACJ","sourcesContent":["import { Native } from \"./Native.js\"\r\n// import { NeuText } from \"./NeuText.js\"\r\nimport { NeuContainer, NeuContainerData } from \"./NeuContainer.js\"\r\nimport { UInputElement } from \"../Create/Create.js\"\r\n// import { NeuContainerData } from  \"./NeuContainer\"\r\n\r\n\r\nexport interface NeuInputData extends NeuContainerData {\r\n    Value: string,\r\n    Type: string,\r\n    Placeholder: string,\r\n    Disabled: boolean,\r\n    ReadOnly: boolean,\r\n\r\n    CaretColor: string,\r\n    Max: string\r\n}\r\n\r\nexport class NeuInput extends NeuContainer {\r\n    declare element: UInputElement\r\n    declare data: NeuInputData\r\n\r\n    constructor() {\r\n        super()\r\n        this.name = \"NeuInput\"\r\n        this.data = {\r\n            ...new NeuContainer().data,\r\n\r\n            Value: \"\",\r\n            Type: \"text\",\r\n            Placeholder: \"\",\r\n            Disabled: false,\r\n            ReadOnly: false,\r\n\r\n            CaretColor: \"\",\r\n            Max: \"\",\r\n\r\n            // Placeholder\r\n\r\n            // Required: false,\r\n            // Pattern: \"\",\r\n            // Min: \"\",\r\n            // Step: \"\",\r\n\r\n        }\r\n        this.build()\r\n\r\n        // this.data.\r\n\r\n        // this.element.remove()\r\n        this.removeChild(this.element)\r\n\r\n        this.element = this.createInput()\r\n        this.element.style.backgroundColor = \"transparent\"\r\n        this.element.style.border = \"none\"\r\n        this.element.style.outline = \"none\"\r\n        this.element.style.padding = \"0\"\r\n        this.element.style.margin = \"0\"\r\n\r\n        // MacOS surpport\r\n        this.element.style.webkitUserSelect = 'auto'\r\n        this.cover.appendChild(this.element)\r\n        // this.cover = this.element\r\n\r\n        this.target = this.element\r\n\r\n        this.element.addEventListener(\"input\", () => {\r\n            this.data.Value = this.element.value\r\n        })\r\n    }\r\n\r\n    Value() {\r\n        this.element.value = this.data.Value\r\n    }\r\n    Type() {\r\n        this.element.type = this.data.Type\r\n\r\n    }\r\n    Placeholder() {\r\n        this.element.placeholder = this.data.Placeholder\r\n    }\r\n    Disabled() {\r\n        this.element.disabled = this.data.Disabled\r\n    }\r\n    ReadOnly() {\r\n        this.element.readOnly = this.data.ReadOnly\r\n    }\r\n\r\n    CaretColor() {\r\n        this.element.style.caretColor = this.data.CaretColor\r\n    }\r\n\r\n    Max (){\r\n        this.element.max = this.data.Max\r\n    }\r\n}\r\n"]}