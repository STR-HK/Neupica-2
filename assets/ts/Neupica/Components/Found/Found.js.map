{"version":3,"file":"Found.js","sourceRoot":"","sources":["Found.ts"],"names":[],"mappings":"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","sourcesContent":["import { Children } from \"../../../Common/Children.js\"\r\nimport {\r\n    createCover,\r\n    createDiv,\r\n    createImg,\r\n    createInput,\r\n    createLayout,\r\n} from \"../Create/Create.js\"\r\nimport { Geometry } from \"../../Core/Geometry.js\"\r\n\r\ninterface geometry {\r\n    Width: string,\r\n    Height: string,\r\n    MinWidth: string,\r\n    MinHeight: string,\r\n    MaxWidth: string,\r\n    MaxHeight: string,\r\n    Left: string,\r\n    Top: string,\r\n    Right: string,\r\n    Bottom: string,\r\n    Margin: string,\r\n    Padding: string,\r\n    // Border: : string,\r\n    ZIndex: string,\r\n    Display: string,\r\n    Position: string,\r\n    Float: string,\r\n    Overflow: string,\r\n    OverflowX: string,\r\n    OverflowY: string,\r\n    AspectRatio: string,\r\n}\r\n\r\ninterface UElement extends HTMLElement {\r\n    addChild: (child) => void\r\n}\r\n\r\ninterface UDivElement extends HTMLDivElement {\r\n    addChild: (child) => void\r\n}\r\n\r\ninterface UImageElement extends HTMLImageElement {\r\n    addChild: (child) => void\r\n}\r\n\r\ninterface UInputElement extends HTMLInputElement {\r\n    addChild: (child) => void\r\n}\r\n\r\nexport class Found extends Children {\r\n    build: () => void\r\n    target: UElement\r\n\r\n    name: string\r\n\r\n    cover: UDivElement\r\n    element: UElement | UDivElement | UInputElement | UImageElement\r\n\r\n    geometry: geometry\r\n    private update_gm: (attribute: string) => void\r\n    private readonly build_gm: () => void\r\n    getBound: () => UDivElement\r\n\r\n    watchEvent: (eventname: string, callback: Function)  => void\r\n    watchBoundEvent: (eventname: string, callback: Function) => void\r\n    watchPreset: (preset: string, callback: Function) => void\r\n    watchEvents: (eventnames: Array<string>, callback: Function) => void\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.build = function () {\r\n            this.obj = {}\r\n            Object.entries(this.data).forEach(([key, value]) => {\r\n                this.obj[key] = value\r\n            })\r\n\r\n            Object.keys(this.data).forEach((key) => {\r\n                Object.defineProperty(this.data, key, {\r\n                    get: () => {\r\n                        return this.obj[key]\r\n                    },\r\n                    set: (newValue) => {\r\n                        this.obj[key] = newValue\r\n                        this[key]()\r\n                    },\r\n                })\r\n            })\r\n        }\r\n\r\n        this.geometry = new Geometry().geometry\r\n        this.target = this.element\r\n\r\n        this.update_gm = function (attribute: string) {\r\n            try {\r\n                this.target.style\r\n            } catch (e) {\r\n                this.target = this.element\r\n                try {\r\n                    this.target.style\r\n                } catch (e) {\r\n                    console.warn(this)\r\n                    console.warn(\r\n                        '\"this.element & this.target\" is missing\\nUnable to update geometry'\r\n                    )\r\n                    return\r\n                }\r\n            }\r\n            if (attribute === \"Width\") {\r\n                // this.cover.style.width = this.geometry.Width\r\n                this.target.style.width = this.geometry.Width\r\n            }\r\n            if (attribute === \"Height\") {\r\n                this.target.style.height = this.geometry.Height\r\n            }\r\n            if (attribute === \"MinWidth\") {\r\n                this.target.style.minWidth = this.geometry.MinWidth\r\n            }\r\n            if (attribute === \"MinHeight\") {\r\n                this.target.style.minHeight = this.geometry.MinHeight\r\n            }\r\n            if (attribute === \"MaxWidth\") {\r\n                this.target.style.maxWidth = this.geometry.MaxWidth\r\n            }\r\n            if (attribute === \"MaxHeight\") {\r\n                this.target.style.maxHeight = this.geometry.MaxHeight\r\n            }\r\n            if (attribute === \"Left\") {\r\n                this.target.style.left = this.geometry.Left\r\n            }\r\n            if (attribute === \"Top\") {\r\n                this.target.style.top = this.geometry.Top\r\n            }\r\n            if (attribute === \"Right\") {\r\n                this.target.style.right = this.geometry.Right\r\n            }\r\n            if (attribute === \"Bottom\") {\r\n                this.target.style.bottom = this.geometry.Bottom\r\n            }\r\n            if (attribute === \"Margin\") {\r\n                this.target.style.margin = this.geometry.Margin\r\n            }\r\n            if (attribute === \"Padding\") {\r\n                this.target.style.padding = this.geometry.Padding\r\n            }\r\n            if (attribute === \"Border\") {\r\n                this.target.style.border = this.geometry.Border\r\n            }\r\n            if (attribute === \"ZIndex\") {\r\n                this.target.style.zIndex = this.geometry.ZIndex\r\n            }\r\n            if (attribute === \"Display\") {\r\n                this.target.style.display = this.geometry.Display\r\n            }\r\n            if (attribute === \"Position\") {\r\n                this.target.style.position = this.geometry.Position\r\n            }\r\n            if (attribute === \"Float\") {\r\n                this.target.style.float = this.geometry.Float\r\n            }\r\n            if (attribute === \"Overflow\") {\r\n                this.target.style.overflow = this.geometry.Overflow\r\n            }\r\n            if (attribute === \"OverflowX\") {\r\n                this.target.style.overflowX = this.geometry.OverflowX\r\n            }\r\n            if (attribute === \"OverflowY\") {\r\n                this.target.style.overflowY = this.geometry.OverflowY\r\n            }\r\n            if (attribute === \"AspectRatio\") {\r\n                this.target.style.aspectRatio = this.geometry.AspectRatio\r\n            }\r\n\r\n        }\r\n\r\n        this.build_gm = function (): void {\r\n            this.gb_obj = {}\r\n\r\n            Object.entries(this.geometry).forEach(([key, value]) => {\r\n                this.gb_obj[key] = value\r\n                // this[key] = value\r\n            })\r\n\r\n            Object.keys(this.geometry).forEach((key) => {\r\n                Object.defineProperty(this.geometry, key, {\r\n                    get: () => {\r\n                        return this.gb_obj[key]\r\n                    },\r\n                    set: (newValue) => {\r\n                        this.gb_obj[key] = newValue\r\n                        // console.log(key)\r\n                        this.update_gm(key)\r\n                    },\r\n                })\r\n            })\r\n        }\r\n        this.build_gm()\r\n\r\n        this.getBound = function (): UDivElement {\r\n            let target = this.cover\r\n            while (true) {\r\n                if (!Array.from(target.classList).includes(\"NeuBound\")) {\r\n                    target = target.children[0]\r\n                } else {\r\n                    break\r\n                }\r\n            }\r\n            return target\r\n        }\r\n\r\n        this.watchEvent = function (eventname: string, callback: Function) {\r\n            this.cover.addEventListener(eventname, callback)\r\n        }\r\n        this.watchBoundEvent = function (eventname: string, callback: Function) {\r\n            this.getBound().addEventListener(eventname, callback)\r\n        }\r\n        this.watchPreset = function (preset: string, callback: Function) {\r\n        }\r\n        this.watchEvents = function (eventnames: Array<string>, callback: Function) {\r\n            eventnames.forEach((eventname) => {\r\n                console.log(eventname)\r\n                this.cover.addEventListener(eventname, callback)\r\n            })\r\n        }\r\n    }\r\n\r\n    createCover(): UDivElement {\r\n        return createCover(Object.getPrototypeOf(this).constructor.name)\r\n    }\r\n    createDiv(): UDivElement {\r\n        return createDiv()\r\n    }\r\n    createImg(): UImageElement {\r\n        return createImg()\r\n    }\r\n    createInput(): UInputElement {\r\n        return createInput()\r\n    }\r\n}\r\n"]}