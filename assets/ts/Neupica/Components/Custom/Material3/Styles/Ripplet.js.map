{"version":3,"file":"Ripplet.js","sourceRoot":"","sources":["Ripplet.ts"],"names":[],"mappings":"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","sourcesContent":["export type RippletOptions = Partial<typeof defaultOptions>\r\nexport type RippletContainerElement = HTMLElement & { readonly __ripplet__: unique symbol }\r\n\r\nexport const defaultOptions = {\r\n    className: '',\r\n    color: 'currentcolor' as string | null,\r\n    opacity: 0.1 as number | null,\r\n    spreadingDuration: '.4s' as string | null,\r\n    spreadingDelay: '0s' as string | null,\r\n    spreadingTimingFunction: 'linear' as string | null,\r\n    clearing: true as boolean | 'true' | 'false' | null,\r\n    clearingDuration: '1s' as string | null,\r\n    clearingDelay: '0s' as string | null,\r\n    clearingTimingFunction: 'ease-in-out' as string | null,\r\n    centered: false as boolean | 'true' | 'false' | null,\r\n    appendTo: 'auto' as 'auto' | 'target' | 'parent' | 'body' | string | null,\r\n}\r\n\r\nconst target2container2ripplet = new Map<Element, Map<RippletContainerElement, HTMLElement>>()\r\n\r\nlet containerContainerTemplate: HTMLElement\r\n\r\nconst findElementAppendTo = (target: Element, appendTo: string | null): Element => {\r\n    // return document.body\r\n    if (appendTo && appendTo !== 'auto') {\r\n        return appendTo === 'target' ? target : appendTo === 'parent' ? target.parentElement! : appendTo!\r\n    }\r\n    while (\r\n        target &&\r\n        (target instanceof SVGElement ||\r\n            target instanceof HTMLInputElement ||\r\n            target instanceof HTMLSelectElement ||\r\n            target instanceof HTMLTextAreaElement ||\r\n            target instanceof HTMLImageElement ||\r\n            target instanceof HTMLHRElement)\r\n        ) {\r\n        target = target.parentElement!\r\n    }\r\n    return target\r\n}\r\n\r\nfunction ripplet(\r\n    targetSuchAsPointerEvent: MouseEvent | Readonly<{ currentTarget: Element; clientX: number; clientY: number }>,\r\n    options?: Readonly<RippletOptions>,\r\n): RippletContainerElement\r\n\r\nfunction ripplet(\r\n    targetSuchAsPointerEvent: Event | Readonly<{ currentTarget: Element }>,\r\n    options?: Readonly<RippletOptions>,\r\n): RippletContainerElement | undefined\r\n\r\nfunction ripplet(\r\n    { currentTarget, clientX, clientY }: Readonly<{ currentTarget: any; clientX?: number; clientY?: number }>,\r\n    _options?: Readonly<RippletOptions>,\r\n): RippletContainerElement | undefined {\r\n    if (!(currentTarget instanceof Element)) {\r\n        return\r\n    }\r\n    const options: typeof defaultOptions = _options\r\n        ? (Object.keys(defaultOptions) as (keyof RippletOptions)[]).reduce<any>(\r\n            (merged, field) => ((merged[field] = _options.hasOwnProperty(field) ? _options[field] : defaultOptions[field]), merged),\r\n            {},\r\n        )\r\n        : defaultOptions\r\n    if (!containerContainerTemplate) {\r\n        const _containerContainerTemplate = document.createElement('div')\r\n        _containerContainerTemplate.innerHTML =\r\n            '<div style=\"float:left;position:absolute;isolation:isolate;pointer-events:none\"><div style=\"position:absolute;overflow:hidden;transform-origin:0 0\"><div style=\"border-radius:50%;transform:scale(0)\"></div></div></div>'\r\n        containerContainerTemplate = _containerContainerTemplate.firstChild as HTMLElement\r\n    }\r\n    const targetRect = currentTarget.getBoundingClientRect()\r\n    if (options.centered && options.centered !== 'false') {\r\n        clientX = targetRect.left + targetRect.width * 0.5\r\n        clientY = targetRect.top + targetRect.height * 0.5\r\n\r\n    } else if (typeof clientX !== 'number' || typeof clientY !== 'number') {\r\n        return\r\n    } else {\r\n        const zoomReciprocal = 1 / (+getComputedStyle(document.body).zoom || 1)\r\n        clientX = clientX * zoomReciprocal\r\n        clientY = clientY * zoomReciprocal\r\n    }\r\n    const targetStyle = getComputedStyle(currentTarget)\r\n    const applyCssVariable = (value: string | null | undefined) => {\r\n        const match = value && /^var\\((--.+)\\)$/.exec(value)\r\n        return match ? targetStyle.getPropertyValue(match[1]!) : value\r\n    }\r\n    const elementAppendTo = findElementAppendTo(currentTarget, options.appendTo)\r\n    const containerContainerElement: RippletContainerElement = elementAppendTo.appendChild(containerContainerTemplate.cloneNode(true)) as any\r\n    // containerContainerElement.style.zIndex = ((+targetStyle.zIndex || 0) + 1) as string & number\r\n    containerContainerElement.style.zIndex = String(10000)\r\n    const containerElement = containerContainerElement.firstChild as HTMLElement\r\n    {\r\n        let containerRect = containerElement.getBoundingClientRect()\r\n        const containerStyle = containerElement.style\r\n        containerStyle.top = `${targetRect.top - containerRect.top}px`\r\n        containerStyle.left = `${targetRect.left - containerRect.left}px`\r\n        containerStyle.width = `${targetRect.width}px`\r\n        containerStyle.height = `${targetRect.height}px`\r\n        containerStyle.opacity = applyCssVariable(options.opacity as string & number)!\r\n        containerStyle.borderTopLeftRadius = targetStyle.borderTopLeftRadius\r\n        containerStyle.borderTopRightRadius = targetStyle.borderTopRightRadius\r\n        containerStyle.borderBottomLeftRadius = targetStyle.borderBottomLeftRadius\r\n        containerStyle.borderBottomRightRadius = targetStyle.borderBottomRightRadius\r\n        containerStyle.clipPath = targetStyle.clipPath\r\n\r\n        containerRect = containerElement.getBoundingClientRect()\r\n        const scaleX = targetRect.width / containerRect.width\r\n        const scaleY = targetRect.height / containerRect.height\r\n        containerStyle.transform = `scale(${scaleX},${scaleY}) translate(${targetRect.left - containerRect.left}px,${\r\n            targetRect.top - containerRect.top\r\n        }px)`\r\n    }\r\n    {\r\n        const distanceX = Math.max(clientX - targetRect.left, targetRect.right - clientX)\r\n        const distanceY = Math.max(clientY - targetRect.top, targetRect.bottom - clientY)\r\n        const radius = Math.sqrt(distanceX * distanceX + distanceY * distanceY)\r\n\r\n        const rippletElement = containerElement.firstChild as HTMLElement\r\n        const rippletStyle = rippletElement.style\r\n\r\n        const color = applyCssVariable(options.color)!\r\n        rippletStyle.backgroundColor = /^currentcolor$/i.test(color) ? targetStyle.color : color\r\n\r\n        rippletElement.className = options.className\r\n        rippletStyle.width = rippletStyle.height = `${radius + radius}px`\r\n        if (getComputedStyle(elementAppendTo).direction === 'rtl') {\r\n            rippletStyle.marginRight = `${targetRect.right - clientX - radius}px`\r\n        } else {\r\n            rippletStyle.marginLeft = `${clientX - targetRect.left - radius}px`\r\n        }\r\n        rippletStyle.marginTop = `${clientY - targetRect.top - radius}px`\r\n        rippletStyle.transition = `transform ${applyCssVariable(options.spreadingDuration)} ${applyCssVariable(\r\n            options.spreadingTimingFunction,\r\n        )} ${applyCssVariable(options.spreadingDelay)},opacity ${applyCssVariable(options.clearingDuration)} ${applyCssVariable(\r\n            options.clearingTimingFunction,\r\n        )} ${applyCssVariable(options.clearingDelay)}`\r\n\r\n        rippletElement.addEventListener('transitionend', event => {\r\n            if (event.propertyName === 'opacity' && containerContainerElement.parentElement) {\r\n                containerContainerElement.parentElement.removeChild(containerContainerElement)\r\n            }\r\n        })\r\n        if (options.clearing && options.clearing !== 'false') {\r\n            rippletStyle.opacity = '0'\r\n        } else {\r\n            let container2ripplet = target2container2ripplet.get(currentTarget)\r\n            if (!container2ripplet) {\r\n                target2container2ripplet.set(currentTarget, (container2ripplet = new Map<RippletContainerElement, HTMLElement>()))\r\n            }\r\n            container2ripplet.set(containerContainerElement, rippletElement)\r\n        }\r\n\r\n        // reflect styles by force layout and start transition\r\n        rippletElement.offsetWidth // tslint:disable-line:no-unused-expression\r\n        rippletStyle.transform = ''\r\n    }\r\n    return containerContainerElement\r\n}\r\n\r\nripplet.clear = (targetElement?: Element, rippletContainerElement?: RippletContainerElement) => {\r\n    if (targetElement) {\r\n        const container2ripplet = target2container2ripplet.get(targetElement)\r\n        if (container2ripplet) {\r\n            if (rippletContainerElement) {\r\n                const rippletElement = container2ripplet.get(rippletContainerElement)\r\n                rippletElement && (rippletElement.style.opacity = '0')\r\n                container2ripplet.delete(rippletContainerElement)\r\n                container2ripplet.size === 0 && target2container2ripplet.delete(targetElement)\r\n            } else {\r\n                container2ripplet.forEach(r => (r.style.opacity = '0'))\r\n                target2container2ripplet.delete(targetElement)\r\n            }\r\n        }\r\n    } else {\r\n        target2container2ripplet.forEach(container2ripplet => container2ripplet.forEach(r => (r.style.opacity = '0')))\r\n        target2container2ripplet.clear()\r\n    }\r\n}\r\n\r\nripplet.defaultOptions = defaultOptions\r\nripplet._ripplets = target2container2ripplet\r\n\r\nexport default ripplet"]}