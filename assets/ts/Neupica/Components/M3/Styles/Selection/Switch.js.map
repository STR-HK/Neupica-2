{"version":3,"file":"Switch.js","sourceRoot":"","sources":["Switch.ts"],"names":[],"mappings":"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","sourcesContent":["import { NeuContainer } from \"../../../Native/NeuContainer.js\"\r\nimport { colorScheme } from \"../../Components/Color.js\"\r\nimport { Padding } from \"../../../../../Tool/Padding.js\"\r\nimport { anime } from \"../../Components/Motion/anime.es.js\"\r\n\r\nexport class Switch extends NeuContainer {\r\n    State: boolean\r\n\r\n    Track: NeuContainer\r\n    Thumb: NeuContainer\r\n    Icon: any\r\n    constructor() {\r\n        super()\r\n        this.name = 'Switch'\r\n\r\n        this.State = false\r\n\r\n        this.cover.style.cursor = \"pointer\"\r\n\r\n\r\n        this.Track = new NeuContainer()\r\n        this.Track.geometry.Width = '52rem'\r\n        this.Track.geometry.Height = '32rem'\r\n        this.Track.data.BorderRadius = '16rem'\r\n        this.Track.data.JustifyContent = 'center'\r\n        this.addChild(this.Track)\r\n\r\n        this.Thumb = new NeuContainer()\r\n        this.Thumb.data.BorderRadius = '50%'\r\n        this.Track.addChild(this.Thumb)\r\n\r\n        this.Icon\r\n\r\n        let that = this\r\n\r\n        this.watchEvent('click', function() {\r\n            that.Toggle()\r\n        })\r\n\r\n        this.Toggle()\r\n\r\n        this.getBound().setAttribute('onpointerdown', `ripplet(arguments[0], ${JSON.stringify(\r\n            {\r\n                // \"color\":\"black\",\r\n                \"opacity\":\"0.15\",\r\n                \"spreadingDuration\":\".225s\",\r\n                \"spreadingDelay\":\"0s\",\r\n                // \"spreadingTimingFunction\":\"cubic-bezier(0.03,-0.01, 0, 0.89)\",\r\n                \"clearing\":false,\r\n                \"clearingDuration\":\".225s\",\r\n                \"clearingDelay\":\".150s\",\r\n                // \"clearingTimingFunction\":\"ease-in-out\",\r\n                \"centered\":false,\r\n                \"appendTo\":\"target\"\r\n            }\r\n        )})`)\r\n        this.getBound().setAttribute('onpointerup', \"ripplet.clear(this)\")\r\n        this.getBound().setAttribute('onpointerleave', \"ripplet.clear(this)\")\r\n\r\n\r\n    }\r\n\r\n    Toggle() {\r\n        if (this.State) {\r\n            this.Track.data.BackgroundColor = colorScheme.primary\r\n            this.Track.data.BorderColor = 'transparent'\r\n\r\n            this.Track.data.Padding = new Padding().all('1rem')\r\n\r\n            // this.Thumb.data.BackgroundColor = colorScheme.onPrimary\r\n            // this.Thumb.geometry.Width = '24rem'\r\n            // this.Thumb.geometry.Height = '24rem'\r\n\r\n            anime({\r\n                targets: this.Thumb.element,\r\n                easing: 'linear',\r\n                duration: 100,\r\n                translateX: '24rem',\r\n                scale: 3/2,\r\n                backgroundColor: [\r\n                    colorScheme.outline,\r\n                    colorScheme.onPrimary,\r\n                ]\r\n            })\r\n            // this.Thumb.geometry.Left = '20rem'\r\n\r\n\r\n        } else {\r\n            this.Track.data.BackgroundColor = colorScheme.surfaceVariant\r\n            this.Track.data.BorderColor = colorScheme.outline\r\n            this.Track.data.BorderWidth = '2rem'\r\n            this.Track.data.BorderStyle = 'solid'\r\n\r\n            this.Track.data.Padding = new Padding().all('5rem')\r\n\r\n            this.Thumb.data.BackgroundColor = colorScheme.outline\r\n            this.Thumb.geometry.Width = '16rem'\r\n            this.Thumb.geometry.Height = '16rem'\r\n\r\n            // this.Thumb.geometry.Left = '0rem'\r\n\r\n            anime({\r\n                targets: this.Thumb.element,\r\n                easing: 'linear',\r\n                duration: 100,\r\n                translateX: '0rem',\r\n                scale: 1,\r\n                backgroundColor: [\r\n                    colorScheme.onPrimary,\r\n                    colorScheme.outline,\r\n\r\n                ]\r\n            })\r\n\r\n        }\r\n\r\n        this.State = !this.State\r\n\r\n    }\r\n}"]}