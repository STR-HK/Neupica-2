{"version":3,"file":"image_utils.js","sourceRoot":"","sources":["../../utils/image_utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,eAAe,EAAC,MAAM,8BAA8B,CAAC;AAC7D,OAAO,EAAC,KAAK,EAAC,MAAM,gBAAgB,CAAC;AAErC,OAAO,EAAC,WAAW,EAAC,MAAM,eAAe,CAAC;AAE1C;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,KAAuB;IAChE,oCAAoC;IACpC,MAAM,UAAU,GAAG,MAAM,IAAI,OAAO,CAAoB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC1E,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAC;SAC5D;QACD,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE;YAClB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YAC3B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC7B,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;QACtE,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,oCAAoC;IACpC,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC7C,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,EAAE;YACX,SAAS;SACV;QACD,MAAM,IAAI,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnB;IAED,oCAAoC;IACpC,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACrD,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {QuantizerCelebi} from '../quantize/quantizer_celebi';\r\nimport {Score} from '../score/score';\r\n\r\nimport {argbFromRgb} from './color_utils';\r\n\r\n/**\r\n * Get the source color from an image.\r\n *\r\n * @param image The image element\r\n * @return Source color - the color most suitable for creating a UI theme\r\n */\r\nexport async function sourceColorFromImage(image: HTMLImageElement) {\r\n  // Convert Image data to Pixel Array\r\n  const imageBytes = await new Promise<Uint8ClampedArray>((resolve, reject) => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    if (!context) {\r\n        return reject(new Error('Could not get canvas context'));\r\n    }\r\n    image.onload = () => {\r\n      canvas.width = image.width;\r\n      canvas.height = image.height;\r\n      context.drawImage(image, 0, 0);\r\n      resolve(context.getImageData(0, 0, image.width, image.height).data);\r\n    };\r\n  });\r\n\r\n  // Convert Image data to Pixel Array\r\n  const pixels: number[] = [];\r\n  for (let i = 0; i < imageBytes.length; i += 4) {\r\n    const r = imageBytes[i];\r\n    const g = imageBytes[i + 1];\r\n    const b = imageBytes[i + 2];\r\n    const a = imageBytes[i + 3];\r\n    if (a < 255) {\r\n      continue;\r\n    }\r\n    const argb = argbFromRgb(r, g, b);\r\n    pixels.push(argb);\r\n  }\r\n\r\n  // Convert Pixels to Material Colors\r\n  const result = QuantizerCelebi.quantize(pixels, 128);\r\n  const ranked = Score.score(result);\r\n  const top = ranked[0];\r\n  return top;\r\n}\r\n"]}