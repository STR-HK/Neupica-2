{"version":3,"file":"theme_utils.js","sourceRoot":"","sources":["../../utils/theme_utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {Blend} from '../blend/blend';\r\nimport {CorePalette} from '../palettes/core_palette';\r\nimport {TonalPalette} from '../palettes/tonal_palette';\r\nimport {Scheme} from '../scheme/scheme';\r\n\r\nimport {sourceColorFromImage} from './image_utils';\r\nimport {hexFromArgb} from './string_utils';\r\n\r\n/**\r\n * Custom color used to pair with a theme\r\n */\r\nexport interface CustomColor {\r\n  value: number;\r\n  name: string;\r\n  blend: boolean;\r\n}\r\n\r\n/**\r\n * Color group\r\n */\r\nexport interface ColorGroup {\r\n  color: number;\r\n  onColor: number;\r\n  colorContainer: number;\r\n  onColorContainer: number;\r\n}\r\n\r\n/**\r\n * Custom Color Group\r\n */\r\nexport interface CustomColorGroup {\r\n  color: CustomColor;\r\n  value: number;\r\n  light: ColorGroup;\r\n  dark: ColorGroup;\r\n}\r\n\r\n/**\r\n * Theme\r\n */\r\nexport interface Theme {\r\n  source: number;\r\n  schemes: {light: Scheme; dark: Scheme;};\r\n  palettes: {\r\n    primary: TonalPalette; secondary: TonalPalette; tertiary: TonalPalette;\r\n    neutral: TonalPalette;\r\n    neutralVariant: TonalPalette;\r\n    error: TonalPalette;\r\n  };\r\n  customColors: CustomColorGroup[];\r\n}\r\n\r\n/**\r\n * Generate a theme from a source color\r\n *\r\n * @param source Source color\r\n * @param customColors Array of custom colors\r\n * @return Theme object\r\n */\r\nexport function themeFromSourceColor(\r\n    source: number, customColors: CustomColor[] = []): Theme {\r\n  const palette = CorePalette.of(source);\r\n  return {\r\n    source,\r\n    schemes: {\r\n      light: Scheme.light(source),\r\n      dark: Scheme.dark(source),\r\n    },\r\n    palettes: {\r\n      primary: palette.a1,\r\n      secondary: palette.a2,\r\n      tertiary: palette.a3,\r\n      neutral: palette.n1,\r\n      neutralVariant: palette.n2,\r\n      error: palette.error,\r\n    },\r\n    customColors: customColors.map((c) => customColor(source, c)),\r\n  };\r\n}\r\n\r\n/**\r\n * Generate a theme from an image source\r\n *\r\n * @param image Image element\r\n * @param customColors Array of custom colors\r\n * @return Theme object\r\n */\r\nexport async function themeFromImage(\r\n    image: HTMLImageElement, customColors: CustomColor[] = []) {\r\n  const source = await sourceColorFromImage(image);\r\n  return themeFromSourceColor(source, customColors);\r\n}\r\n\r\n/**\r\n * Generate custom color group from source and target color\r\n *\r\n * @param source Source color\r\n * @param color Custom color\r\n * @return Custom color group\r\n *\r\n * @link https://m3.material.io/styles/color/the-color-system/color-roles\r\n */\r\nexport function customColor(\r\n    source: number, color: CustomColor): CustomColorGroup {\r\n  let value = color.value;\r\n  const from = value;\r\n  const to = source;\r\n  if (color.blend) {\r\n    value = Blend.harmonize(from, to);\r\n  }\r\n  const palette = CorePalette.of(value);\r\n  const tones = palette.a1;\r\n  return {\r\n    color,\r\n    value,\r\n    light: {\r\n      color: tones.tone(40),\r\n      onColor: tones.tone(100),\r\n      colorContainer: tones.tone(90),\r\n      onColorContainer: tones.tone(10),\r\n    },\r\n    dark: {\r\n      color: tones.tone(80),\r\n      onColor: tones.tone(20),\r\n      colorContainer: tones.tone(30),\r\n      onColorContainer: tones.tone(90),\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Apply a theme to an element\r\n *\r\n * @param theme Theme object\r\n * @param options Options\r\n */\r\nexport function applyTheme(theme: Theme, options?: {\r\n  dark?: boolean,\r\n  target?: HTMLElement,\r\n  brightnessSuffix?: boolean,\r\n  paletteTones?: number[],\r\n}) {\r\n  const target = options?.target || document.body;\r\n  const isDark = options?.dark ?? false;\r\n  const scheme = isDark ? theme.schemes.dark : theme.schemes.light;\r\n  setSchemeProperties(target, scheme);\r\n  if (options?.brightnessSuffix) {\r\n    setSchemeProperties(target, theme.schemes.dark, '-dark');\r\n    setSchemeProperties(target, theme.schemes.light, '-light');\r\n  }\r\n  if (options?.paletteTones) {\r\n    const tones = options?.paletteTones ?? [];\r\n    for (const [key, palette] of Object.entries(theme.palettes)) {\r\n      const paletteKey = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n      for (const tone of tones) {\r\n        const token = `--md-ref-palette-${paletteKey}-${paletteKey}${tone}`;\r\n        const color = hexFromArgb(palette.tone(tone));\r\n        target.style.setProperty(token, color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setSchemeProperties(\r\n    target: HTMLElement,\r\n    scheme: Scheme,\r\n    suffix: string = '',\r\n) {\r\n  for (const [key, value] of Object.entries(scheme.toJSON())) {\r\n    const token = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n    const color = hexFromArgb(value);\r\n    target.style.setProperty(`--md-sys-color-${token}${suffix}`, color);\r\n  }\r\n}"]}