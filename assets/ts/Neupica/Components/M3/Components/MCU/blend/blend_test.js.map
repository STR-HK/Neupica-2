{"version":3,"file":"blend_test.js","sourceRoot":"","sources":["../../blend/blend_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless requiRED by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport 'jasmine';\r\n\r\nimport {customMatchers} from '../utils/test_utils';\r\n\r\nimport {Blend} from './blend';\r\n\r\nbeforeEach(() => {\r\n  jasmine.addMatchers(customMatchers);\r\n});\r\n\r\nconst RED = 0xffff0000;\r\nconst BLUE = 0xff0000ff;\r\nconst GREEN = 0xff00ff00;\r\nconst YELLOW = 0xffffff00;\r\n\r\ndescribe('harmonize', () => {\r\n  it('redToBlue', () => {\r\n    const answer = Blend.harmonize(RED, BLUE);\r\n    expect(answer).matchesColor(0xffFB0057);\r\n  });\r\n\r\n  it('redToGreen', () => {\r\n    const answer = Blend.harmonize(RED, GREEN);\r\n    expect(answer).matchesColor(0xffD85600);\r\n  });\r\n\r\n  it('redToYellow', () => {\r\n    const answer = Blend.harmonize(RED, YELLOW);\r\n    expect(answer).matchesColor(0xffD85600);\r\n  });\r\n\r\n  it('blueToGreen', () => {\r\n    const answer = Blend.harmonize(BLUE, GREEN);\r\n    expect(answer).matchesColor(0xff0047A3);\r\n  });\r\n\r\n  it('blueToRed', () => {\r\n    const answer = Blend.harmonize(BLUE, RED);\r\n    expect(answer).matchesColor(0xff5700DC);\r\n  });\r\n\r\n  it('blueToYellow', () => {\r\n    const answer = Blend.harmonize(BLUE, YELLOW);\r\n    expect(answer).matchesColor(0xff0047A3);\r\n  });\r\n\r\n  it('greenToBlue', () => {\r\n    const answer = Blend.harmonize(GREEN, BLUE);\r\n    expect(answer).matchesColor(0xff00FC94);\r\n  });\r\n\r\n  it('greenToRed', () => {\r\n    const answer = Blend.harmonize(GREEN, RED);\r\n    expect(answer).matchesColor(0xffB1F000);\r\n  });\r\n\r\n  it('greenToYellow', () => {\r\n    const answer = Blend.harmonize(GREEN, YELLOW);\r\n    expect(answer).matchesColor(0xffB1F000);\r\n  });\r\n\r\n  it('yellowToBlue', () => {\r\n    const answer = Blend.harmonize(YELLOW, BLUE);\r\n    expect(answer).matchesColor(0xffEBFFBA);\r\n  });\r\n\r\n  it('yellowToGreen', () => {\r\n    const answer = Blend.harmonize(YELLOW, GREEN);\r\n    expect(answer).matchesColor(0xffEBFFBA);\r\n  });\r\n\r\n  it('yellowToRed', () => {\r\n    const answer = Blend.harmonize(YELLOW, RED);\r\n    expect(answer).matchesColor(0xffFFF6E3);\r\n  });\r\n});\r\n"]}