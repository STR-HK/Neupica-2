{"version":3,"file":"Render.js","sourceRoot":"","sources":["Render.ts"],"names":[],"mappings":"AAQA,MAAM,CAAC,OAAO,GAAG,EAAE,CAAA;AAEnB,MAAM,UAAU,SAAS,CAAC,QAAQ;IAC9B,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;AACnC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,MAAM;IAC3B,IAAI,IAAI,GAAG,KAAK,CAAA;IAChB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAS,KAAK;QAChD,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,MAAM,EAAE;YACzB,IAAI,GAAG,IAAI,CAAA;YACX,OAAO,KAAK,CAAA;SACf;IACL,CAAC,CAAC,CAAA;IACF,OAAO,IAAI,CAAA;AACf,CAAC;AAED,MAAM,CAAC,SAAS,GAAG,SAAS,CAAA;AAC5B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAA;AAE1B,MAAM,UAAU,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO;IAC/C,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAA;IAEpC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG;QACvB,KAAK,EAAE,GAAG;QACV,QAAQ,EAAE,MAAM;QAChB,KAAK,EAAE,GAAG;QACV,SAAS,EAAE,OAAO;KACrB,CAAA;IAED,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAA;IAEvB,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE;QAC7C,OAAO,CAAC,GAAG,CACP,2BAA2B,QAAQ,UAAU,EAC7C,mCAAmC,CACtC,CAAA;KACJ;IACD,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;AACnC,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO;IAClD,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA;IAE3B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAElC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE;QAC7C,OAAO,CAAC,GAAG,CACP,8BAA8B,QAAQ,UAAU,EAChD,mCAAmC,CACtC,CAAA;KACJ;IACD,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;AACnC,CAAC","sourcesContent":["declare global {\r\n    interface Window {\r\n        renders: Array<any>,\r\n        getRender: Function,\r\n        validate: Function,\r\n    }\r\n}\r\n\r\nwindow.renders = []\r\n\r\nexport function getRender(renderID) {\r\n    return window.renders[renderID]\r\n}\r\n\r\nexport function validate(NeuApp) {\r\n    let bool = false\r\n    Object.values(window.renders).forEach(function(value) {\r\n        if (value['app'] === NeuApp) {\r\n            bool = true\r\n            return false\r\n        }\r\n    })\r\n    return bool\r\n}\r\n\r\nwindow.getRender = getRender\r\nwindow.validate = validate\r\n\r\nexport function NeuRender(app, layout, dom, silence) {\r\n    let renderID = window.renders.length\r\n\r\n    window.renders[renderID] = {\r\n        'app': app,\r\n        'layout': layout,\r\n        'dom': dom,\r\n        'silence': silence\r\n    }\r\n\r\n    app.renderID = renderID\r\n\r\n    if (!(silence) && window.mode === 'development') {\r\n        console.log(\r\n            `%cNeuRender Process(PID=${renderID}) Called`,\r\n            \"font-weight: bold; color: #56B6C2\"\r\n        )\r\n    }\r\n    dom.appendChild(layout.element)\r\n}\r\n\r\nexport function NeuEliminate(app, layout, dom, silence) {\r\n    let renderID = app.renderID\r\n\r\n    window.renders.splice(renderID, 1)\r\n\r\n    if (!(silence) && window.mode === 'development') {\r\n        console.log(\r\n            `%cNeuEliminate Process(PID=${renderID}) Called`,\r\n            \"font-weight: bold; color: #E06C75\"\r\n        )\r\n    }\r\n    dom.removeChild(layout.element)\r\n}\r\n\r\n"]}